syntax = "proto3";

option java_multiple_files = true;
option java_package = "com.changjiang.grpc.lib";
option java_outer_classname = "GtwServiceProto";

package gtw;

// 通用请求消息
message GrpcRequest {
    // 服务ID，用于标识具体的服务
    string service_id = 1;
    // 方法名称
    string method_name = 2;
    // 请求头信息，用于传递元数据
    map<string, string> headers = 3;
    // 请求负载
    bytes payload = 4;
    // 请求超时时间（毫秒）
    int32 timeout_ms = 5;
    // 请求追踪ID
    string trace_id = 6;
}

// 通用响应消息
message GrpcResponse {
    // 响应状态码
    int32 code = 1;
    // 响应消息
    string message = 2;
    // 响应头信息
    map<string, string> headers = 3;
    // 响应负载
    bytes payload = 4;
    // 错误详情（如果有）
    ErrorDetail error = 5;
    // 响应追踪ID（与请求对应）
    string trace_id = 6;
}

// 错误详情
message ErrorDetail {
    // 错误码
    string error_code = 1;
    // 错误消息
    string error_message = 2;
    // 错误堆栈（可选）
    string stack_trace = 3;
    // 额外错误信息
    map<string, string> metadata = 4;
}

// gRPC服务定义
service GrpcService {
    // 通用调用方法
    rpc invoke(GrpcRequest) returns (GrpcResponse) {}
    
    // 服务端流式调用
    rpc invokeServerStream(GrpcRequest) returns (stream GrpcResponse) {}
    
    // 客户端流式调用
    rpc invokeClientStream(stream GrpcRequest) returns (GrpcResponse) {}
    
    // 双向流式调用
    rpc invokeBidiStream(stream GrpcRequest) returns (stream GrpcResponse) {}
} 